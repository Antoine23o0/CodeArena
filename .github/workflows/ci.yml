name: CI - Backend & Frontend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend Tests (avec Mongo)
    runs-on: ubuntu-latest

    # ðŸ‘‡ DÃ©marre un conteneur Mongo accessible pendant le job
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      # ðŸ§± Construction de lâ€™image backend
      - name: Build backend image
        run: docker build -t codearena-backend ./api

      # ðŸ§ª Lancement des tests dâ€™intÃ©gration avec Mongo
      - name: Run backend integration tests
        run: |
          docker run --rm \
            --network host \
            -e MONGO_URL=mongodb://localhost:27017/test-db \
            codearena-backend npm run test:integration
        # Si Python :
        # docker run --rm --network host -e MONGO_URL=mongodb://localhost:27017/test-db codearena-backend pytest

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build frontend image
        run: docker build -t codearena-frontend ./web

      - name: Run frontend tests
        run: docker run codearena-frontend npm test
