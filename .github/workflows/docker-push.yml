name:  Build & Push Docker Images

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]  # Exemple : v1.0.0, v2.1.3

jobs:
  build-and-push:
    name: Build and push Docker images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write   # n√©cessaire pour GHCR (GitHub Container Registry)
      id-token: write   # n√©cessaire si tu veux signer les images (optionnel)

    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #  Connexion √† Docker Hub OU GHCR (selon ton cas)
      - name:  Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      # --------------- VARIABLES GLOBALES -------------------
      - name:  Define variables
        run: |
          echo "REGISTRY=${{ secrets.DOCKERHUB_USERNAME && 'docker.io' || 'ghcr.io' }}" >> $GITHUB_ENV
          echo "IMAGE_BACKEND=${{ secrets.DOCKERHUB_USERNAME }}/codearena-backend" >> $GITHUB_ENV
          echo "IMAGE_FRONTEND=${{ secrets.DOCKERHUB_USERNAME }}/codearena-frontend" >> $GITHUB_ENV
        env:
          REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN || secrets.GITHUB_TOKEN }}

      # --------------- BACKEND -------------------
      - name: üèóÔ∏è Build & push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --------------- FRONTEND -------------------
      - name: üèóÔ∏è Build & push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./web
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
