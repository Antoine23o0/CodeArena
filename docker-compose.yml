version: "3.9"
services:
  mongo:
    container_name: mongo
    image: mongo:6
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: codearena
    ports:
      - "${MONGO_BIND_HOST:-127.0.0.1}:${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend-network

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_BIND_HOST:-127.0.0.1}:${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo
    networks:
      - backend-network

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "${API_BIND_HOST:-127.0.0.1}:${API_PORT:-3000}:3000"
    environment:
      PORT: "${API_PORT:-3000}"
      MONGO_URI: "${MONGO_URI:-mongodb://root:rootpassword@mongo:27017/codearena?authSource=admin}"
      ALLOWED_ORIGINS: "${PUBLIC_WEB_ORIGIN:-http://localhost:5173}"
      AUTO_SEED_CONTESTS: "${AUTO_SEED_CONTESTS:-true}"
    depends_on:
      - mongo
    networks:
      - backend-network

  web:
    container_name: web
    build:
      context: .
      dockerfile: ./web/Dockerfile
      args:
        VITE_API_URL: "${PUBLIC_API_URL:-http://localhost:3000/api}"
        VITE_SOCKET_URL: "${PUBLIC_SOCKET_URL:-http://localhost:3000}"
        VITE_API_FALLBACK_PORT: "${API_PORT:-3000}"
    ports:
      - "${WEB_BIND_HOST:-0.0.0.0}:${WEB_PORT:-5173}:80"
    depends_on:
      - api
    networks:
      - backend-network

volumes:
  mongo_data:

networks:
  backend-network:
    driver: bridge
